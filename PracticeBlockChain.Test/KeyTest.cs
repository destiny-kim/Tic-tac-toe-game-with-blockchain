using System;
using System.Collections.Generic;
using System.Text;
using Xunit;

namespace PracticeBlockChain.Test
{
    public class KeyTest
    {
        [Fact]
        public void BytesTest()
        {
            var bs = new byte[]
            {
                0x98, 0x66, 0x98, 0x50, 0x72, 0x8c, 0x6c, 0x41, 0x0b, 0xf4,
                0x2c, 0x45, 0xfe, 0x7c, 0x49, 0x23, 0x2d, 0x14, 0xcf, 0xb5,
                0x5b, 0x78, 0x4d, 0x81, 0x35, 0xae, 0x40, 0x4c, 0x7c, 0x24,
                0x3f, 0xc7,
            };
            var key = new PrivateKey(bs);
            Assert.Equal(bs, key.ByteArray);
        }

        [Fact]
        public void PublicKeyTest()
        {
            var key = new PrivateKey(
                new byte[]
                {
                    0x82, 0xfc, 0x99, 0x47, 0xe8, 0x78, 0xfc, 0x7e, 0xd0, 0x1c,
                    0x6c, 0x31, 0x06, 0x88, 0x60, 0x3f, 0x0a, 0x41, 0xc8, 0xe8,
                    0x70, 0x4e, 0x5b, 0x99, 0x0e, 0x83, 0x88, 0x34, 0x3b, 0x0f,
                    0xd4, 0x65,
                }
            );
            var expected = new byte[]
            {
                0x04, 0xc7, 0xc6, 0x74, 0xa2, 0x23, 0x66, 0x1f, 0xae, 0xfe,
                0xd8, 0x51, 0x5f, 0xeb, 0xac, 0xc4, 0x11, 0xc0, 0xf3, 0x56,
                0x9c, 0x10, 0xc6, 0x5e, 0xc8, 0x6c, 0xdc, 0xe4, 0xd8, 0x5c,
                0x7e, 0xa2, 0x6c, 0x61, 0x7f, 0x0c, 0xf1, 0x9c, 0xe0, 0xb1,
                0x06, 0x86, 0x50, 0x1e, 0x57, 0xaf, 0x1a, 0x70, 0x02, 0x28,
                0x2f, 0xef, 0xa5, 0x28, 0x45, 0xbe, 0x22, 0x67, 0xd1, 0xf4,
                0xd7, 0xaf, 0x32, 0x29, 0x74,
            };
            var actual = key.PublicKey.Format(false);

            Assert.Equal(expected, actual);
        }
    }
}
